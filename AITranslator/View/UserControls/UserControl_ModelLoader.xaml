<UserControl x:Class="AITranslator.View.UserControls.UserControl_ModelLoader"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:control="clr-namespace:AITranslator.View.Controls"
             xmlns:vm="clr-namespace:AITranslator.View.Models"
             xmlns:calc="clr-namespace:CalcBinding;assembly=CalcBinding" 
             xmlns:local="clr-namespace:AITranslator.View.UserControls"
             xmlns:media ="clr-namespace:System.Windows.Media;assembly=PresentationCore"
             mc:Ignorable="d" 
             Height="Auto" d:DesignWidth="400" Background="#FF191D25" Loaded="UserControl_Loaded">
    <Grid Margin="5">
        <StackPanel>
            <CheckBox x:Name="cb_CfgVisible" Margin="-5" Height="24" Style="{StaticResource CheckButton}" Checked="cb_CfgVisible_Checked" Unchecked="cb_CfgVisible_Unchecked">
                <CheckBox.Content>
                    <MultiBinding Converter="{StaticResource CommunicatorTypeToString}" ConverterParameter="正在使用TGW模型通讯器 正在使用OpenAI模型通讯器 未加载模型 加载模型中... 已加载模型">
                        <Binding Path="CommunicatorType"/>
                        <Binding Path="CommunicatorLLama_ViewModel.ModelLoaded"/>
                        <Binding Path="CommunicatorLLama_ViewModel.ModelLoading"/>
                        <Binding Path="CommunicatorLLama_ViewModel.ModelLoadProgress"/>
                        <Binding ElementName="btn_SelectModel" Path="Content"/>
                    </MultiBinding>
                </CheckBox.Content>
            </CheckBox>
            <StackPanel x:Name="gb_main"  Margin="0,10,0,5" Visibility="{calc:Binding 'Height!=0',RelativeSource={RelativeSource Mode=Self},FalseToVisibility=Collapsed}">
                <GroupBox  BorderThickness="0.1" BorderBrush="White">
                    <GroupBox.Header>
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                            <ComboBox Foreground="White" SelectionChanged="ComboBox_CommunicatorType_SelectionChanged" IsEnabled="{calc:Binding '!CommunicatorLLama_ViewModel.ModelLoaded and !CommunicatorLLama_ViewModel.ModelLoading and ActiveTask == null and !ManualTranslating'}" SelectedIndex="{Binding CommunicatorType,Converter={StaticResource CommunicatorTypeToIndex},Mode=TwoWay}">
                                <ComboBoxItem Content="内置加载器"/>
                                <ComboBoxItem Content="TGW"/>
                                <ComboBoxItem Content="OpenAI"/>
                            </ComboBox>
                            <!--<control:ToggleButton Width="38" Height="14" FontSize="8" Margin="5,0,0,0" OnText="外置" OffText="内置"   IsChecked="{Binding IsOpenAILoader}" Checked="ToggleButton_Checked" Unchecked="ToggleButton_Unchecked"/>-->
                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel Margin="5,10,5,5">
                        <control:SizeAnimationGrid x:Name="gd_OpemAI" Height="90" IsEnabled="{calc:Binding 'CommunicatorType == vm:CommunicatorType.OpenAI'}" Visibility="{calc:Binding '!(Opacity == 0)',RelativeSource={RelativeSource Mode=Self},FalseToVisibility=Collapsed}">
                            <StackPanel>
                                <Grid IsEnabled="{calc:Binding 'ActiveTask == null and !ManualTranslating'}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0" Height="30">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="60"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="请求地址:" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"/>
                                        <Border Grid.Column="1" BorderThickness="1" VerticalAlignment="Center" BorderBrush="{calc:Binding 'ActiveTask != null ? media:Brushes.Gray : media:Brushes.White'}" Height="25" CornerRadius="12.5" >
                                            <TextBox Text="{Binding CommunicatorOpenAI_ViewModel.ServerURL}" Foreground="White" InputMethod.IsInputMethodEnabled="False" VerticalAlignment="Center" CaretBrush="White" Margin="5,0" BorderThickness="0" Background="Transparent" FontSize="10"/>
                                        </Border>
                                    </Grid>
                                    <Grid Grid.Row="1" Height="30">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="60"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="API密钥:" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"/>
                                        <Border Grid.Column="1" BorderThickness="1" VerticalAlignment="Center" BorderBrush="{calc:Binding 'ActiveTask != null ? media:Brushes.Gray : media:Brushes.White'}" Height="25" CornerRadius="12.5" >
                                            <TextBox Text="{Binding CommunicatorOpenAI_ViewModel.ApiKey}" Foreground="White" InputMethod.IsInputMethodEnabled="False" VerticalAlignment="Center" CaretBrush="White" Margin="5,0" BorderThickness="0" Background="Transparent" FontSize="10"/>
                                        </Border>
                                    </Grid>
                                    <Grid Grid.Row="2" Height="30">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="60"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="模型:" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"/>
                                        <Border Grid.Column="1" BorderThickness="1" VerticalAlignment="Center" BorderBrush="{calc:Binding 'ActiveTask != null ? media:Brushes.Gray : media:Brushes.White'}" Height="25" CornerRadius="12.5" >
                                            <TextBox Text="{Binding CommunicatorOpenAI_ViewModel.Model}" Foreground="White" InputMethod.IsInputMethodEnabled="False" VerticalAlignment="Center" CaretBrush="White" Margin="5,0" BorderThickness="0" Background="Transparent" FontSize="10"/>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </StackPanel>
                        </control:SizeAnimationGrid>

                        <control:SizeAnimationGrid x:Name="gd_TGW" Height="30" IsEnabled="{calc:Binding 'CommunicatorType == vm:CommunicatorType.TGW'}" Visibility="{calc:Binding '!(Opacity == 0)',RelativeSource={RelativeSource Mode=Self},FalseToVisibility=Collapsed}">
                            <StackPanel>
                                <Grid IsEnabled="{calc:Binding 'ActiveTask == null and !ManualTranslating'}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <control:ToggleButton Margin="0,0,5,0" Width="60" OnText="远程" OffText="本地" IsChecked="{Binding CommunicatorTGW_ViewModel.IsRomatePlatform}"/>
                                    <Border Grid.Column="1" BorderThickness="1" IsEnabled="{Binding CommunicatorTGW_ViewModel.IsRomatePlatform}" BorderBrush="{calc:Binding !CommunicatorTGW_ViewModel.IsRomatePlatform ? media:Brushes.Gray : media:Brushes.White}" Height="25" CornerRadius="12.5" >
                                        <TextBox Text="{Binding CommunicatorTGW_ViewModel.ServerURL}" Foreground="White" InputMethod.IsInputMethodEnabled="False" VerticalAlignment="Center" CaretBrush="White" Margin="5,0" BorderThickness="0" Background="Transparent" FontSize="10"/>
                                    </Border>
                                    <control:ToggleButton Grid.Column="2" Margin="0,0,5,0" Width="65" OnText="1B8" OffText="非1B8" IsChecked="{Binding CommunicatorTGW_ViewModel.IsModel1B8}"/>
                                </Grid>
                            </StackPanel>
                        </control:SizeAnimationGrid>
                        <control:SizeAnimationGrid x:Name="gd_LLama" Height="155" IsEnabled="{calc:Binding 'CommunicatorType == vm:CommunicatorType.LLama'}" Visibility="{calc:Binding 'Opacity != 0',RelativeSource={RelativeSource Mode=Self},FalseToVisibility=Collapsed}">
                            <StackPanel>
                                <StackPanel Margin="2,0">
                                    <Grid Height="30">
                                        <control:ViewButton x:Name="btn_SelectModel" Height="30" Content="{Binding CommunicatorLLama_ViewModel.ModelPath,Converter={StaticResource ModelName}}" IsHitTestVisible="{calc:Binding !CommunicatorLLama_ViewModel.ModelLoaded and !CommunicatorLLama_ViewModel.ModelLoading}" Click="Button_Select_Click"/>
                                        <ProgressBar Height="3" BorderThickness="0" VerticalAlignment="Bottom" Maximum="100" Minimum="0" Foreground="MediumPurple" Background="Transparent" Value="{Binding CommunicatorLLama_ViewModel.ModelLoadProgress}" Visibility="{calc:Binding CommunicatorLLama_ViewModel.ModelLoading or CommunicatorLLama_ViewModel.ModelLoaded,FalseToVisibility=Hidden}"/>
                                    </Grid>
                                    <control:SizeAnimationGrid Height="90" IsEnabled="{calc:Binding !CommunicatorLLama_ViewModel.ModelLoaded and !CommunicatorLLama_ViewModel.ModelLoading}" Visibility="{calc:Binding 'Opacity != 0',RelativeSource={RelativeSource Mode=Self},FalseToVisibility=Collapsed}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="10"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition Height="40"/>
                                        </Grid.RowDefinitions>
                                        <GroupBox BorderThickness="0.1" BorderBrush="White" Grid.Column="0">
                                            <GroupBox.Header>
                                                <TextBlock Text="GpuLayerCount" Foreground="White" FontSize="10"/>
                                            </GroupBox.Header>
                                            <Grid Margin="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="40"/>
                                                </Grid.ColumnDefinitions>
                                                <Slider x:Name="slider_GpuLayerCount" Grid.Column="0" Margin="0,0,10,0" Maximum="50" Minimum="0" Value="{Binding CommunicatorLLama_ViewModel.GpuLayerCount,Converter={StaticResource GpuLayerCount}}" Ticks="0 5 10 15 20 25 30 35 40 45 50" TickPlacement="BottomRight" FocusVisualStyle="{x:Null}"/>
                                                <TextBox Grid.Column="1" Text="{Binding Value,ElementName=slider_GpuLayerCount,Converter={StaticResource GpuLayerText}}" Background="Transparent" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                            </Grid>
                                        </GroupBox>
                                        <GroupBox  BorderThickness="0.1" BorderBrush="White" Grid.Column="2">
                                            <GroupBox.Header>
                                                <TextBlock Text="ContextSize" Foreground="White" FontSize="10"/>
                                            </GroupBox.Header>
                                            <Grid Margin="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="40"/>
                                                </Grid.ColumnDefinitions>
                                                <Slider x:Name="slider_ContextSize" Grid.Column="0" Margin="0,0,10,0" Maximum="16348" Minimum="0" Value="{Binding CommunicatorLLama_ViewModel.ContextSize}" Ticks="512 1024 2048 3072 4096 5120 6144 7168 8192 9216 10240 11264 12288 13312 14336 15360 16384" IsSnapToTickEnabled="True" TickFrequency="16" TickPlacement="BottomRight" FocusVisualStyle="{x:Null}"/>
                                                <TextBox Grid.Column="1" Text="{Binding Value,ElementName=slider_ContextSize}" Background="Transparent" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                            </Grid>
                                        </GroupBox>
                                        <GroupBox Grid.Row="1" Grid.ColumnSpan="3" Width="200" BorderThickness="0.1" BorderBrush="White">
                                            <GroupBox.Header>
                                                <TextBlock Text="对话格式" Foreground="White" FontSize="10"/>
                                            </GroupBox.Header>
                                            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <ComboBox MinWidth="142" MaxWidth="{Binding MinWidth,RelativeSource={RelativeSource Mode=Self}}" Visibility="{calc:Binding !CommunicatorLLama_ViewModel.ModelLoaded and !CommunicatorLLama_ViewModel.ModelLoading,FalseToVisibility=Hidden}" HorizontalAlignment="Left" Foreground="White" SelectedItem="{Binding CommunicatorLLama_ViewModel.CurrentInstructTemplate}" DisplayMemberPath="Name" ItemsSource="{Binding InstructTemplate}"/>
                                                <control:ViewButton Margin="3,0,0,0" Width="20" Height="20" ToolTip="查看" Command="{Binding OpenInstructTemplateFileCommand}">
                                                    <control:ViewButton.Content>
                                                        <Viewbox Margin="0,0,2,3">
                                                            <Path Fill="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type control:ViewButton}}}" Data="M928.842245 512.091074c0-5.006014-0.846274-9.193383-1.086751-9.691733-0.182149-2.480494-1.028423-7.001461-1.815345-9.374508-0.210801-0.590448-0.484024-1.209548-0.724501-1.799996-0.424672-1.360997-0.876973-2.691295-1.390673-3.749394-76.871785-168.137395-242.376213-281.144168-411.782507-281.144168-169.375595 0-334.865697 112.902396-411.388535 280.130072-0.921999 1.815345-1.572822 3.553942-1.981121 5.066389-0.181125 0.49835-0.39295 0.967024-0.558725 1.406023-1.512447 4.430916-1.542122 7.514137-1.421372 6.712889-0.710175 3.251044-1.360997 9.722432-1.360997 9.722432-0.181125 1.949398-0.181125 3.50687 0.030699 5.442966 0 0 0.649799 5.65479 0.968048 6.80294 0.090051 1.602498 0.483001 3.931542 0.951675 6.048763l-0.030699 0c0.408299 1.814322 0.968048 3.568269 1.738597 5.291516 0.393973 1.330298 0.862647 2.570545 1.270946 3.507894 76.976162 168.166047 242.436588 281.20352 411.781484 281.20352 169.436994 0 334.941422-112.945375 410.936233-279.328823 1.177825-2.177596 1.935072-4.233418 2.448772-6.018064 0.2415-0.543376 0.454348-1.027399 0.604774-1.511423 1.331321-3.872191 1.602498-7.227612 1.481747-7.227612l-0.028653 0.029676C928.027693 520.921183 928.842245 516.89959 928.842245 512.091074zM872.717993 514.146896c-0.029676 0.121773-0.091074 0.272199-0.151449 0.393973-0.090051 0.36225-0.240477 0.785899-0.332575 1.209548-68.403926 147.420561-212.830293 246.337431-360.191502 246.337431-146.997935 0-291.168476-98.642624-360.252901-246.578931-0.166799-0.5137-0.287549-0.998747-0.468674-1.481747-0.030699-0.484024-0.12075-0.876973-0.150426-1.150196-0.060375-0.300852-0.12075-0.724501-0.166799-1.088798l0-0.3776c0.166799-0.620124 0.286526-1.239224 0.347924-1.919722 0.12075-0.36225 0.211824-0.710175 0.347924-1.103124C220.132094 360.89042 364.680235 261.928524 512.041444 261.928524c147.420561 0 291.940049 99.051947 360.161826 246.322082 0.060375 0.287549 0.121773 0.530073 0.212848 0.726547 0.060375 0.2415 0.119727 0.484024 0.240477 0.740874 0.151449 1.104147 0.272199 2.192945 0.423649 2.736321C872.899118 513.028423 872.809067 513.572822 872.717993 514.146896zM512.041444 373.060601c-76.598562 0-138.954749 62.325487-138.954749 138.939399 0 76.598562 62.356187 138.954749 138.954749 138.954749 76.598562 0 138.954749-62.356187 138.954749-138.954749C650.996193 435.386088 588.640006 373.060601 512.041444 373.060601zM512.041444 595.372849c-45.935192 0-83.371826-37.406958-83.371826-83.371826 0-45.950542 37.436634-83.356476 83.371826-83.356476 45.964868 0 83.373873 37.406958 83.373873 83.356476C595.414293 557.965891 558.006312 595.372849 512.041444 595.372849z"/>
                                                        </Viewbox>
                                                    </control:ViewButton.Content>
                                                </control:ViewButton>
                                                <control:ViewButton Margin="3,0,0,0" Width="20" Height="20" ToolTip="打开文件夹" Command="{Binding OpenInstructTemplateFolderCommand}">
                                                    <control:ViewButton.Content>
                                                        <Viewbox Margin="2">
                                                            <Path Fill="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type control:ViewButton}}}" Data="M1171.561026 935.253333H88.746667V246.285128h1082.814359zM88.746667 88.746667h398.047179L508.849231 157.538462h-420.102564zM1171.561026 157.538462H601.796923l-30.982564-96.098462A88.221538 88.221538 0 0 0 486.793846 0H88.746667A88.746667 88.746667 0 0 0 0 88.746667v846.506666a88.746667 88.746667 0 0 0 88.746667 88.746667h1082.814359A88.746667 88.746667 0 0 0 1260.307692 935.253333V246.285128A88.746667 88.746667 0 0 0 1171.561026 157.538462"/>
                                                        </Viewbox>
                                                    </control:ViewButton.Content>
                                                </control:ViewButton>
                                            </StackPanel>
                                        </GroupBox>
                                    </control:SizeAnimationGrid>
                                    <Grid Margin="0,10,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="120"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" Content="Flash Attention" Foreground="White" IsChecked="{Binding CommunicatorLLama_ViewModel.FlashAttention}"/>


                                        <control:ViewButton Grid.Column="1" Height="25" Click="Button_Load_Click" IsEnabled="{calc:Binding 'ActiveTask == null and !ManualTranslating'}">
                                            <Button.Content>
                                                <MultiBinding Converter="{StaticResource LoadModelButtonText}" ConverterParameter="卸载模型 加载模型 取消加载">
                                                    <Binding Path="CommunicatorLLama_ViewModel.ModelLoaded"/>
                                                    <Binding Path="CommunicatorLLama_ViewModel.ModelLoading"/>
                                                </MultiBinding>
                                            </Button.Content>
                                        </control:ViewButton>

                                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                                            <control:ToggleButton Margin="5,0" Width="80" OnText="自动加载" OffText="手动加载" HorizontalAlignment="Left" IsChecked="{Binding CommunicatorLLama_ViewModel.AutoLoadModel}"/>
                                            <TextBlock VerticalAlignment="Center" Foreground="White" Text="[?]" Cursor="Help" ToolTip="是否在程序启动时自动加载模型"/>
                                        </StackPanel>
                                        <!--<control:ToggleButton Grid.Column="2" HorizontalAlignment="Left" OnText="启动自加载" OffText="手动加载" IsChecked="{Binding AutoLoadModel}"/>-->
                                    </Grid>
                                </StackPanel>

                            </StackPanel>
                        </control:SizeAnimationGrid>
                        <Border x:Name="tb_error" Visibility="{calc:Binding Error,FalseToVisibility=Collapsed}"  Margin="5,5,5,0" Height="Auto" Background="DarkRed" BorderBrush="White" BorderThickness="1" CornerRadius="9">
                            <Border.DataContext>
                                <vm:ViewModel_CommunicatorTGW/>
                            </Border.DataContext>
                            <TextBlock Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding ErrorMessage}"/>
                        </Border>
                    </StackPanel>
                </GroupBox>
                <control:ViewButton Margin="0,5,0,0" Height="25" Width="120" Content="保存配置" HorizontalAlignment="Right" Click="Button_Save_Click"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
